// <auto-generated />
using Imperium.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Imperium.Migrations
{
    [DbContext(typeof(ContextDB))]
    [Migration("20210731091410_baseactual1")]
    partial class baseactual1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Imperium.Models.Ciudad", b =>
                {
                    b.Property<int>("CiudadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CiudadId");

                    b.ToTable("Ciudads");
                });

            modelBuilder.Entity("Imperium.Models.Comentario", b =>
                {
                    b.Property<int>("ComentarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("ViviendaId")
                        .HasColumnType("int");

                    b.HasKey("ComentarioId");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("ViviendaId");

                    b.ToTable("Comentario");
                });

            modelBuilder.Entity("Imperium.Models.Contacto", b =>
                {
                    b.Property<int>("ContactoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mensaje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactoId");

                    b.ToTable("Contactos");
                });

            modelBuilder.Entity("Imperium.Models.Imagen", b =>
                {
                    b.Property<int>("ImagenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Archivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contenido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViviendaId")
                        .HasColumnType("int");

                    b.HasKey("ImagenId");

                    b.HasIndex("ViviendaId");

                    b.ToTable("Imagens");
                });

            modelBuilder.Entity("Imperium.Models.Mision", b =>
                {
                    b.Property<int>("MisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MisionId");

                    b.ToTable("Misions");
                });

            modelBuilder.Entity("Imperium.Models.Perfil", b =>
                {
                    b.Property<int>("PerfilId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PerfilId");

                    b.ToTable("Perfils");
                });

            modelBuilder.Entity("Imperium.Models.TipoVivienda", b =>
                {
                    b.Property<int>("TipoViviendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipoViviendaId");

                    b.ToTable("TipoViviendas");
                });

            modelBuilder.Entity("Imperium.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("APaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CiudadId")
                        .HasColumnType("int");

                    b.Property<string>("Correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fotografia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PerfilId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("CiudadId");

                    b.HasIndex("PerfilId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Imperium.Models.Vision", b =>
                {
                    b.Property<int>("VisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VisionId");

                    b.ToTable("Visions");
                });

            modelBuilder.Entity("Imperium.Models.Vivienda", b =>
                {
                    b.Property<int>("ViviendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caracteristicas")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CiudadId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio")
                        .HasColumnType("float");

                    b.Property<double>("Superficie")
                        .HasColumnType("float");

                    b.Property<int>("TipoViviendaId")
                        .HasColumnType("int");

                    b.Property<string>("Transaccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ViviendaId");

                    b.HasIndex("CiudadId");

                    b.HasIndex("TipoViviendaId");

                    b.ToTable("Viviendas");
                });

            modelBuilder.Entity("Imperium.Models.Comentario", b =>
                {
                    b.HasOne("Imperium.Models.Usuario", "Usuario")
                        .WithMany("Comentarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imperium.Models.Vivienda", "Vivienda")
                        .WithMany("Comentarios")
                        .HasForeignKey("ViviendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");

                    b.Navigation("Vivienda");
                });

            modelBuilder.Entity("Imperium.Models.Imagen", b =>
                {
                    b.HasOne("Imperium.Models.Vivienda", "Vivienda")
                        .WithMany("Imagen")
                        .HasForeignKey("ViviendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vivienda");
                });

            modelBuilder.Entity("Imperium.Models.Usuario", b =>
                {
                    b.HasOne("Imperium.Models.Ciudad", "Ciudad")
                        .WithMany("Usuarios")
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imperium.Models.Perfil", "Perfil")
                        .WithMany("Usuarios")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("Imperium.Models.Vivienda", b =>
                {
                    b.HasOne("Imperium.Models.Ciudad", "Ciudad")
                        .WithMany("Viviendas")
                        .HasForeignKey("CiudadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Imperium.Models.TipoVivienda", "TipoVivienda")
                        .WithMany("Viviendas")
                        .HasForeignKey("TipoViviendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ciudad");

                    b.Navigation("TipoVivienda");
                });

            modelBuilder.Entity("Imperium.Models.Ciudad", b =>
                {
                    b.Navigation("Usuarios");

                    b.Navigation("Viviendas");
                });

            modelBuilder.Entity("Imperium.Models.Perfil", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Imperium.Models.TipoVivienda", b =>
                {
                    b.Navigation("Viviendas");
                });

            modelBuilder.Entity("Imperium.Models.Usuario", b =>
                {
                    b.Navigation("Comentarios");
                });

            modelBuilder.Entity("Imperium.Models.Vivienda", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Imagen");
                });
#pragma warning restore 612, 618
        }
    }
}
